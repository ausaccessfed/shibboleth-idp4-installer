<?xml version="1.0" encoding="UTF-8"?>
<AttributeResolver
        xmlns="urn:mace:shibboleth:2.0:resolver" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:aaf="urn:mace:aaf.edu.au:shibboleth:2.0:resolver"
        xsi:schemaLocation="urn:mace:shibboleth:2.0:resolver http://shibboleth.net/schema/idp/shibboleth-attribute-resolver.xsd
                            urn:mace:aaf.edu.au:shibboleth:2.0:resolver classpath:/schema/aaf-shibv4-ext.xsd">


    <!-- ========================================== -->
    <!--         The User's ID - UID                -->
    <!-- ========================================== -->

    <!-- Option 1: Using the subject's canonicalized principal name -->
    <AttributeDefinition id="uid" xsi:type="PrincipalName" />

    <!-- Option 2: From the user's UID attribute in the directory -->
    <!--
    <AttributeDefinition id="uid" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="uid" />
    </AttributeDefinition>
    -->

    <!-- Option 3: From the user's sAMAccountName in Active Directory -->
    <!--
    <AttributeDefinition id="uid" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="sAMAccountName" />
    </AttributeDefinition>
    -->

    <!-- ========================================== -->
    <!--         AAF CORE ATTRIBUTES                -->
    <!-- ========================================== -->

    <!-- auEduPersonSharedToken -->
    <AttributeDefinition id="auEduPersonSharedToken" xsi:type="Simple">
        <InputDataConnector ref="sharedToken" attributeNames="auEduPersonSharedToken" />
    </AttributeDefinition>

    <!-- displayName -->
    <AttributeDefinition id="displayName" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="displayName" />
    </AttributeDefinition>

    <!-- eduPersonAffiliation -->
    <AttributeDefinition xsi:type="ScriptedAttribute" id="eduPersonAffiliation">
        <InputDataConnector ref="ldap" attributeNames="eduPersonAffiliation" />
        <Script><![CDATA[
            var HashSet = Java.type("java.util.HashSet");
            var StringAttributeValue = Java.type("net.shibboleth.idp.attribute.StringAttributeValue");
            var newAffiliations = new HashSet();

            if (typeof eduPersonAffiliation != "undefined") {
                for ( i = 0; i < eduPersonAffiliation.getValues().size(); i++){
                    value = eduPersonAffiliation.getValues().get(i).toLowerCase();
                    if (value.equals("student") ||
                        value.equals("faculty") ||
                        value.equals("staff") ||
                        value.equals("employee") ||
                        value.equals("affiliate") ||
                        value.equals("alum") ||
                        value.equals("member") ||
                        value.equals("library-walk-in")) {
                            newAffiliations.add(new StringAttributeValue(value));
                    }
                }
            }

            if (newAffiliations.contains(new StringAttributeValue("student")) ||
                newAffiliations.contains(new StringAttributeValue("faculty")) ||
                newAffiliations.contains(new StringAttributeValue("staff")) ||
                newAffiliations.contains(new StringAttributeValue("employee"))) {
                    newAffiliations.add(new StringAttributeValue("member"));
            }

            if (newAffiliations.size() < 1) {
                newAffiliations.add(new StringAttributeValue("affiliate"));
            }

            eduPersonAffiliation.getValues().clear();

            itr = newAffiliations.iterator();
            while(itr.hasNext()){
               eduPersonAffiliation.addValue(itr.next());
            }
        ]]></Script>
    </AttributeDefinition>

    <!-- eduPersonAssurance -->
    <AttributeDefinition id="eduPersonAssurance" xsi:type="Simple">
        <InputDataConnector ref="staticAttributes" attributeNames="eduPersonAssurance" />
    </AttributeDefinition>

    
    <!-- eduPersonEntitlement -->
    <AttributeDefinition id="eduPersonEntitlement" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="eduPersonEntitlement" />
    </AttributeDefinition>

    <!-- eduPersonPrincipalName -->
    
    <!-- Option 1: Appending the organisations scope to the user's UID -->
    <AttributeDefinition id="eduPersonPrincipalName" xsi:type="Scoped" scope="%{idp.scope}">
        <InputAttributeDefinition ref="uid" />
    </AttributeDefinition>

    <!-- Option 2: From value in LDAP -->
    <!--           Note: The domain name suffix MUST match the scope value -->
    <!--                 assigned to the IdP (in the IdPs Scope value in the metadata -->
    <!-- 
    <AttributeDefinition id="eduPersonPrincipalName" xsi:type="Prescoped">
        <InputDataConnector ref="ldap" attributeNames="eduPersonPrincipalName" />
    </AttributeDefinition>
    -->

    <!-- eduPersonScopedAffiliation -->

    <AttributeDefinition xsi:type="Scoped" id="eduPersonScopedAffiliation" scope="%{idp.scope}">
        <InputAttributeDefinition ref="eduPersonAffiliation" />
    </AttributeDefinition>

    <!-- eduPersonTargetedID -->

    <AttributeDefinition xsi:type="SAML2NameID" id="eduPersonTargetedID"
    nameIdFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">
        <InputDataConnector ref="StoredIDConnector" attributeNames="StoredID" />
        <AttributeEncoder xsi:type="SAML1XMLObject" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.10"/>
        <AttributeEncoder xsi:type="SAML2XMLObject" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.10" friendlyName="eduPersonTargetedID"/>
    </AttributeDefinition>

    <!-- mail -->
    <AttributeDefinition id="mail" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="mail" />
    </AttributeDefinition>

    <!-- givenName -->
    <AttributeDefinition id="givenName" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="givenName" />
    </AttributeDefinition>

    <!-- sn (surname) -->
    <AttributeDefinition id="sn" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="sn" />
    </AttributeDefinition>

    <!-- schacHomeOrganisation -->
    <AttributeDefinition id="schacHomeOrganization" xsi:type="Simple">
        <InputDataConnector ref="staticAttributes" attributeNames="schacHomeOrganization" />
    </AttributeDefinition>

    <!-- schacHomeOrganisationType -->
    <AttributeDefinition id="schacHomeOrganizationType" xsi:type="Simple">
        <InputDataConnector ref="staticAttributes" attributeNames="schacHomeOrganizationType" />
    </AttributeDefinition>

    <!-- o (Organisation) -->
    <AttributeDefinition xsi:type="Simple" id="o">
        <InputDataConnector ref="staticAttributes" attributeNames="o" />
    </AttributeDefinition>

    <!-- eduPersonOrcid -->
    <AttributeDefinition id="eduPersonOrcid" xsi:type="Simple">
       <InputDataConnector ref="ldap" attributeNames="eduPersonOrcid" />
    </AttributeDefinition>

    <!-- ========================================== -->
    <!--     AAF improtant Optional ATTRIBUTES       -->
    <!-- ========================================== -->

    <!-- dsdStudentId - Used by myEquals -->
    <AttributeDefinition xsi:type="Simple" id="dsdStudentId">
        <InputDataConnector ref="ldap" attributeNames="studentNumber" />
    </AttributeDefinition>

    <!-- cn (commonName) - Previously a CORE attribute, still used by many services -->
    <!--                   Note: Script is used to ensure cn is of the correct format -->
    <!--                         for the AAF. "FirstName SPACE Surname". -->

    <AttributeDefinition xsi:type="ScriptedAttribute" id="cn">
        <InputAttributeDefinition ref="givenName" />
        <InputAttributeDefinition ref="sn" />
        <Script><![CDATA[

            cn.getValues().clear();

            var hyphenatedGN = null;
            var hyphenatedSN = null;

            if (typeof givenName != "undefined" && givenName != null && givenName.getValues().size() > 0) {
                hyphenatedGN = givenName.getValues().get(0).replace(/ /g, '-');
            }

            if (typeof sn != "undefined" && sn != null && sn.getValues().size() > 0) {
                hyphenatedSN = sn.getValues().get(0).replace(/ /g, '-');
            }

            cn.getValues().add([hyphenatedGN, hyphenatedSN].join(' '));

            ]]>
        </Script>
    </AttributeDefinition>

{% if source_persistent_id != "" %}
    <!-- ========================================== -->
    <!-- SAML Subject ID Attributes                 -->
    <!-- ========================================== -->

    <AttributeDefinition xsi:type="ScriptedAttribute" id="samlSubjectID">
        <InputDataConnector ref="ldap" attributeNames="%{idp.newPersistentId.sourceAttribute}"/>
        <Script><![CDATA[
            scopedValueType = Java.type("net.shibboleth.idp.attribute.ScopedStringAttributeValue");
            MessageDigestType = Java.type("java.security.MessageDigest");
            Base32Type = Java.type("org.apache.commons.codec.binary.Base32");

            md = MessageDigestType.getInstance("SHA-1");
            Base32 = new Base32Type();

            var saltedUserId = "%{idp.entityID}" + "!" +
                               %{idp.newPersistentId.sourceAttribute}.getValues().get(0) + "!" +
                               "%{idp.persistentId.salt}";
            var hashedUserId = Base32.encodeToString(md.digest(saltedUserId.getBytes()));

            samlSubjectID.addValue(new scopedValueType(hashedUserId, "%{idp.scope}"));
        ]]>
        </Script>
    </AttributeDefinition>

    <AttributeDefinition xsi:type="Scoped" id="samlPairwiseID" scope="%{idp.scope}">
        <InputDataConnector ref="computed" attributeNames="computedId"/>
    </AttributeDefinition>
{% endif %}

    
    <!-- ========================================== -->
    <!--      Data Connectors                       -->
    <!-- ========================================== -->

    <DataConnector id="staticAttributes" xsi:type="Static">
        <Attribute id="schacHomeOrganization">
            <Value>{{ home_organisation }}</Value>
        </Attribute>
        <Attribute id="schacHomeOrganizationType">
            <Value>{{ home_organisation_type }}</Value>
        </Attribute>
        <Attribute id="o">
            <Value>{{ organisation_name }}</Value>
        </Attribute>
        <Attribute id="eduPersonAssurance">
            <Value>urn:mace:aaf.edu.au:iap:id:1</Value>
            <Value>urn:mace:aaf.edu.au:iap:authn:1</Value>
        </Attribute>
    </DataConnector>

    <DataConnector id="ldap" xsi:type="LDAPDirectory"
        ldapURL="%{idp.attribute.resolver.LDAP.ldapURL}"
        baseDN="%{idp.attribute.resolver.LDAP.baseDN}"
        principal="%{idp.attribute.resolver.LDAP.bindDN}"
        principalCredential="%{idp.attribute.resolver.LDAP.bindDNCredential}"
        useStartTLS="%{idp.attribute.resolver.LDAP.useStartTLS:true}"
        connectTimeout="%{idp.attribute.resolver.LDAP.connectTimeout}"
        responseTimeout="%{idp.attribute.resolver.LDAP.responseTimeout}">
        <FilterTemplate>
            <![CDATA[
                %{idp.attribute.resolver.LDAP.searchFilter}
            ]]>
        </FilterTemplate>
        <ConnectionPool
            minPoolSize="%{idp.pool.LDAP.minSize:3}"
            maxPoolSize="%{idp.pool.LDAP.maxSize:10}"
            blockWaitTime="%{idp.pool.LDAP.blockWaitTime:PT3S}"
            validatePeriodically="%{idp.pool.LDAP.validatePeriodically:true}"
            validateTimerPeriod="%{idp.pool.LDAP.validatePeriod:PT5M}"
            validateDN="%{idp.pool.LDAP.validateDN:}"
            validateFilter="%{idp.pool.LDAP.validateFilter:(objectClass=*)}"
            expirationTime="%{idp.pool.LDAP.idleTime:PT10M}"/>
    </DataConnector>

    <DataConnector id="StoredIDConnector" xsi:type="StoredId" 
        generatedAttributeID="StoredID"
        salt="%{idp.persistentId.salt}" >
        <InputAttributeDefinition ref="%{idp.persistentId.sourceAttribute}" />
        <BeanManagedConnection>shibboleth.JPAStorageService.PersistentDataSource</BeanManagedConnection>
    </DataConnector>

    <DataConnector xsi:type="aaf:SharedToken" id="sharedToken"
        salt="%{idp.aepst.salt}" >
        <InputAttributeDefinition ref="%{idp.persistentId.sourceAttribute}" />
        <aaf:BeanManagedConnection>shibboleth.JPAStorageService.DataSource</aaf:BeanManagedConnection>
    </DataConnector>

{% if source_persistent_id != "" %}
    <DataConnector id="computed" xsi:type="ComputedId"
            generatedAttributeID="computedId"
            salt="%{idp.persistentId.salt}"
            algorithm="%{idp.persistentId.algorithm:SHA}"
        encoding="BASE32">

        <InputDataConnector ref="ldap" attributeNames="%{idp.newPersistentId.sourceAttribute}" />
    </DataConnector>
{% endif %}


</AttributeResolver>
